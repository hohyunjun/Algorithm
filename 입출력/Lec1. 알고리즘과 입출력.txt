문제풀이 사이트
알고스팟 : https://algospot.com
코드포스 : http://codeforces.com
탑코더 : http://topcoder.com

읽어보면 좋은 글
http://book.algospot.com/hard.html

알고리즘 공부 원칙
1. 알고리즘이나 문제를 푸는 방법을 이해
2. 관련 문제를 풀어본다
    - 한 문제는 길어야 2시간 정도만 고민해본다.
    - 모르겠으면 포기하고 정답 소스를 보거나 풀이를 본다.
3. 1,2번에서 이해가 잘 가지 않는 부분이 있으면 질문한다.
4. 다시 알고리즘을 이해해보고 문제를 다시 풀어본다.
    - 모르겠으면 포기하고 다시 풀이를 본다.

가장 중요한 것은 생각을 많이 하는 것.

C++에서 cin, cout 사용 시 
ios_base::sync_with_stdio(false); 적용 시
scanf, printf와 비슷한 성능.
C++11, STL은 필수적으로 사용할 필요가 있다.
--> cin.tie(NULL);
--> cin.sync_with_stdio(false);

시간 복잡도
 - 작성한 코드가 시간이 얼마나 걸릴지 예상할 수 있다.
 - Big O Notation
 - 최악의 경우 얼마나 시간이 걸리는지

시간 복잡도의 의미
 - O(1) : 단순 계산
 - O(logN) : N개를 절반으로 계속해서 나눔
 - O(N) : 1중 for문
 - O(N^2): 2중 for문
 - O(N^3): 3중 for문
 - O(2^N): 크기가 N인 집합의 부분집합
 - O(N!): 크기가 N인 순열

 Big O Notation에서 
 1. 상수는 버린다.
 2. 두 가지 항이 있을 때, 변수가 같으면 큰 것만 빼고 버린다.
 3. 두 가지 항이 있는데 변수가 다르면 놔둔다.

 문제풀이
  - scanf의 return 값은 성공적으로 입력받은 변수의 개수이다.
  - 한 줄 입력받기 
    fgets(s, 100, stdin); // 줄바꿈까지 입력받는다.
    scanf("%[^\n]\n", s);
    getline(cin, s);
  - scanf("%1d", &x);
    %d 사이에 수를 넣으면, 그 길이만큼 입력을 받게 된다.
  - scanf("%10s", s);
    %s의 경우에도 개수를 지정해서 입력받을 수 있다.